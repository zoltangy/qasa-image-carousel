{"version":3,"sources":["carousel/CarouselImage.tsx","carousel/CarouselIndicator.tsx","carousel/CarouselArrow.tsx","carousel/Carousel.tsx","App.tsx","index.tsx"],"names":["CarouselImage","src","index","classes","useStyles","className","imageWrapper","alt","image","makeStyles","flex","width","height","objectFit","CarouselIndicator","active","numItems","goTo","indicatorWrapper","Array","from","map","item","indicator","indicatorActive","onClick","key","role","aria-label","bottom","position","display","justifyContent","margin","backgroundColor","borderRadius","transition","cursor","CarouselArrow","direction","rest","useState","keyboardUser","setKeyboardUser","useEffect","handleKeyDown","e","document","removeEventListener","addEventListener","arrowWrapper","noOutline","props","left","right","top","alignItems","color","fontSize","outline","Carousel","data","showDots","showArrows","preloadImages","dataWithOffset","length","pos","setPos","prevPosRef","useRef","wrapperRef","setWidth","swipehandlers","useSwipeable","onSwipedLeft","goForward","onSwipedRight","goBackward","preventDefaultTouchmoveEvent","trackMouse","imagesLoaded","setImagesLoaded","firstRender","interactionEnabled","setInteractionEnabled","current","prevPos","useCallback","p","forEach","imgageToLoad","Image","url","onload","x","event","window","getWidth","el","getBoundingClientRect","captureWidthOnResize","initialRefForWidth","shouldMoveWithoutTransition","indicatorPosition","loaderDiv","CircularProgress","loader","wrapper","ref","data-testid","carousel","withTransition","style","onTransitionEnd","target","onKeyDown","tabIndex","textAlign","overflow","flexDirection","defaultProps","imageList","Math","random","App","carouselContainer","transform","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"4OAQaA,EAA8C,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAC3DC,EAAUC,IAChB,OACE,yBAAKC,UAAWF,EAAQG,cACtB,yBAAKL,IAAKA,EAAKM,IAAK,UAAYL,EAAOG,UAAWF,EAAQK,UAK1DJ,EAAYK,YAAW,CAC3BH,aAAc,CACZI,KAAM,YAERF,MAAO,CACLG,MAAO,OACPC,OAAQ,OACRC,UAAW,aCfFC,EAAsD,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAChFd,EAAUC,IAChB,OACE,yBAAKC,UAAWF,EAAQe,kBACrBC,MAAMC,KAAKD,MAAMH,IAAWK,KAAI,SAACC,EAAMpB,GACtC,IAAIG,EAAYF,EAAQoB,UAExB,OADIR,IAAWb,IAAOG,GAAa,IAAMF,EAAQqB,iBAE/C,yBACEnB,UAAWA,EACXoB,QAAS,kBAAMR,EAAKf,EAAQ,IAC5BwB,IAAKxB,EACLyB,KAAK,SACLC,aAAY,SAAW1B,SAQ7BE,EAAYK,YAAW,CAC3BS,iBAAkB,CAChBP,MAAO,OACPkB,OAAQ,GACRC,SAAU,WACVC,QAAS,OACTC,eAAgB,UAElBT,UAAW,CACTX,OAAQ,EACRD,MAAO,EACPsB,OAAQ,QACRC,gBAAiB,2BACjBC,aAAc,MACdC,WAAY,gBACZC,OAAQ,WAEVb,gBAAiB,CACfU,gBAAiB,W,gBCxCRI,EAA4E,SAAC,GAGnF,IAFLC,EAEI,EAFJA,UACGC,EACC,6BACErC,EAAUC,EAAU,CAAEmC,cADxB,EAIoCE,oBAAS,GAJ7C,mBAIGC,EAJH,KAIiBC,EAJjB,KAKJC,qBAAU,WACR,SAASC,EAAcC,GACP,QAAVA,EAAEpB,MACJiB,GAAgB,GAChBI,SAASC,oBAAoB,UAAWH,IAI5C,OADAE,SAASE,iBAAiB,UAAWJ,GAC9B,kBAAME,SAASC,oBAAoB,UAAWH,MACpD,IAEH,IAAIxC,EAAYF,EAAQ+C,aAExB,OADKR,IAAcrC,GAAa,IAAMF,EAAQgD,WAE5C,uCAAK9C,UAAWA,GAAemC,EAA/B,CAAqCb,KAAK,SAASC,aAAYW,IAC9C,YAAdA,EAA0B,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAKnDnC,EAAYK,YAA6C,CAC7DyC,aAAc,SAACE,GAAD,MAAY,CACxBxC,OAAQ,OACRyC,KAA0B,aAApBD,EAAMb,UAA2B,EAAI,GAC3Ce,MAA2B,YAApBF,EAAMb,UAA0B,EAAI,GAC3CgB,IAAK,EACLzB,SAAU,WACVC,QAAS,OACTC,eAAgB,SAChBwB,WAAY,SACZC,MAAO,2BACPC,SAAU,QACV,UAAW,CACTD,MAAO,2BACPvB,gBAAiB,4BAEnBE,WAAY,kBAEde,UAAW,CACT,UAAW,CACTQ,QAAS,WCnCFC,EAAW,SAACR,GAA0B,IACzCS,EAA8CT,EAA9CS,KAAMC,EAAwCV,EAAxCU,SAAUC,EAA8BX,EAA9BW,WAAYC,EAAkBZ,EAAlBY,cAC9BC,EAAwB,CAAIJ,EAAKA,EAAKK,OAAS,IAAvB,mBAA8BL,GAA9B,CAAoCA,EAAK,KACjE1D,EAAUC,IAHgC,EAI1BqC,mBAAS,GAJiB,mBAIzC0B,EAJyC,KAIpCC,EAJoC,KAK1CC,EAAaC,iBAAsB,MACnCC,EAAaD,iBAAuB,MANM,EAOtB7B,mBAAS,GAPa,mBAOzC9B,EAPyC,KAOlC6D,EAPkC,KAQ1CC,EAAgBC,YAAa,CACjCC,aAAc,kBAAMC,KACpBC,cAAe,kBAAMC,KACrBC,8BAA8B,EAC9BC,YAAY,IAZkC,EAcRvC,mBAAS,GAdD,mBAczCwC,EAdyC,KAc3BC,EAd2B,KAe1CC,EAAcb,kBAAO,GAfqB,EAgBI7B,oBAAS,GAhBb,mBAgBzC2C,EAhByC,KAgBrBC,EAhBqB,KAmBhDzC,qBAAU,WACRyB,EAAWiB,QAAUnB,IACpB,CAACA,IACJ,IAAMoB,EAAUlB,EAAWiB,QAGrBV,EAAYY,uBAAY,WACvBJ,IACLD,EAAYG,SAAU,EACtBlB,GAAO,SAACqB,GAAD,OAAOA,EAAI,KAClBJ,GAAsB,MACrB,CAACD,IAEEN,EAAaU,uBAAY,WACxBJ,IACLD,EAAYG,SAAU,EACtBlB,GAAO,SAACqB,GAAD,OAAOA,EAAI,KAClBJ,GAAsB,MACrB,CAACD,IAUJxC,qBAAU,WACJoB,EACFH,EAAK6B,SAAQ,SAACpE,GACZ,IAAMqE,EAAe,IAAIC,MACzBD,EAAa1F,IAAMqB,EAAKuE,IACxBF,EAAaG,OAAS,WACpBZ,GAAgB,SAACa,GAAD,OAAOA,EAAI,SAI/Bb,EAAgBrB,EAAKK,UAEtB,CAACF,EAAeH,IAGnBjB,qBAAU,WACR,IAAMC,EAAgB,SAACmD,GACH,cAAdA,EAAMtE,IACRoD,IACuB,eAAdkB,EAAMtE,KACfkD,KAKJ,OADAqB,OAAOhD,iBAAiB,UAAWJ,GAC5B,WACLoD,OAAOjD,oBAAoB,UAAWH,MAEvC,CAACiC,EAAYF,IAGhB,IAAMsB,EAAW,SAACC,GACL,OAAPA,GACF3B,EAAS2B,EAAGC,wBAAwBzF,QAIlC0F,EAAuBb,uBAAY,kBAAMU,EAAS3B,EAAWe,WAAU,IACvEgB,EAAqBd,uBAAY,SAACW,GAAD,OAAQD,EAASC,KAAK,IAE7DvD,qBAAU,WAER,OADAqD,OAAOhD,iBAAiB,SAAUoD,GAC3B,WACLJ,OAAOjD,oBAAoB,SAAUqD,MAEtC,CAACA,IAGJ,IAOME,EACK,IAARpC,GAAaoB,IAAY1B,EAAKK,OAAS,GACvCC,IAAQN,EAAKK,QAAsB,IAAZqB,GACxBJ,EAAYG,QAGVkB,EAAoBrC,EAAM,EAK9B,OAJY,IAARA,IAAWqC,EAAoB3C,EAAKK,OAAS,GAC7CC,IAAQN,EAAKK,OAAS,IAAGsC,EAAoB,GAG7CvB,IAAiBpB,EAAKK,OAEtB,yBAAK7D,UAAWF,EAAQsG,WACtB,kBAACC,EAAA,EAAD,CAAkBrG,UAAWF,EAAQwG,UAMzC,wBAASlC,EACP,yBAAKpE,UAAWF,EAAQyG,QAASC,IAAKP,GACpC,yBACEQ,cAAY,WACZD,IAAKtC,EACLlE,UACEkG,EAA8BpG,EAAQ4G,SAAX,UAAyB5G,EAAQ4G,SAAjC,YAA6C5G,EAAQ6G,gBAElFC,MAAO,CAAE5D,KAAMc,EAAMxD,GAAS,GAC9BuG,gBApCoB,WACd,IAAR/C,GAAWC,EAAOP,EAAKK,QACvBC,IAAQN,EAAKK,OAAS,GAAGE,EAAO,GACpCiB,GAAsB,KAmCfpB,EAAe5C,KAAI,SAACC,EAAMpB,GAAP,OAClB,kBAAC,EAAD,CAAewB,IAAKJ,EAAKuE,IAAM3F,EAAOD,IAAKqB,EAAKuE,IAAK3F,MAAOA,QAG/D4D,GAAY,kBAAC,EAAD,CAAmB/C,OAAQyF,EAAmBxF,SAAU6C,EAAKK,OAAQjD,KAlG3E,SAACkG,GACP/B,IACLD,EAAYG,SAAU,EACtBlB,EAAO+C,GACP9B,GAAsB,OA+FjBtB,GACC,oCACE,kBAAC,EAAD,CACExB,UAAU,WACVd,QAAS,kBAAMqD,KACfsC,UAAW,SAACpB,GACQ,MAAdA,EAAMtE,KAA6B,UAAdsE,EAAMtE,KAAiC,aAAdsE,EAAMtE,KAAoBoD,KAE9EuC,SAAU,IAEZ,kBAAC,EAAD,CACE9E,UAAU,UACVd,QAAS,kBAAMmD,KACfwC,UAAW,SAACpB,GACQ,MAAdA,EAAMtE,KAA6B,UAAdsE,EAAMtE,KAAiC,aAAdsE,EAAMtE,KAAoBkD,KAE9EyC,SAAU,QASlBjH,EAAYK,YAAW,CAC3BgG,UAAW,CACTa,UAAW,UAEbX,OAAQ,CACNlD,MAAO,WAETmD,QAAS,CACP9E,SAAU,WACVyF,SAAU,UAEZR,SAAU,CACRjF,SAAU,WACVnB,MAAO,OACPC,OAAQ,OACRmB,QAAS,OACTyF,cAAe,OAEjBR,eAAgB,CACd5E,WAAY,iBAIhBwB,EAAS6D,aAhMY,CACnB3D,UAAU,EACVC,YAAY,EACZC,eAAe,GCbjB,IAAM0D,EAAY,CAChB,CAAE7B,IAAK,0CAA4D,IAAhB8B,KAAKC,UACxD,CAAE/B,IAAK,0CAA4D,IAAhB8B,KAAKC,UACxD,CAAE/B,IAAK,0CAA4D,IAAhB8B,KAAKC,UACxD,CAAE/B,IAAK,0CAA4D,IAAhB8B,KAAKC,UACxD,CAAE/B,IAAK,0CAA4D,IAAhB8B,KAAKC,UACxD,CAAE/B,IAAK,0CAA4D,IAAhB8B,KAAKC,WAG7CC,EAAgB,WAC3B,IAAM1H,EAAUC,IAChB,OACE,yBAAKC,UAAWF,EAAQ2H,mBACtB,kBAAC,EAAD,CAAUjE,KAAM6D,MAKhBtH,EAAYK,YAAW,CAC3BqH,kBAAmB,CACjBnH,MAAO,MACPmB,SAAU,WACVyB,IAAK,MACLF,KAAM,MACN0E,UAAW,2B,QCxBfC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,OAEFpF,SAASqF,eAAe,W","file":"static/js/main.2c4c70fa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ntype CarouselImageProps = {\r\n  src: string;\r\n  index: number;\r\n};\r\n\r\nexport const CarouselImage: React.FC<CarouselImageProps> = ({ src, index }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.imageWrapper}>\r\n      <img src={src} alt={'Image #' + index} className={classes.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  imageWrapper: {\r\n    flex: '1 0 100%',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'contain',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ntype CarouselIndicatorProps = {\r\n  active: number;\r\n  numItems: number;\r\n  goTo: (target: number) => void;\r\n};\r\n\r\nexport const CarouselIndicator: React.FC<CarouselIndicatorProps> = ({ active, numItems, goTo }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.indicatorWrapper}>\r\n      {Array.from(Array(numItems)).map((item, index) => {\r\n        let className = classes.indicator;\r\n        if (active === index) className += ' ' + classes.indicatorActive;\r\n        return (\r\n          <div\r\n            className={className}\r\n            onClick={() => goTo(index + 1)}\r\n            key={index}\r\n            role=\"button\"\r\n            aria-label={'image-' + index}\r\n          ></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  indicatorWrapper: {\r\n    width: '100%',\r\n    bottom: 30,\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  indicator: {\r\n    height: 8,\r\n    width: 8,\r\n    margin: '0 4px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\r\n    borderRadius: '50%',\r\n    transition: 'all 0.7s ease',\r\n    cursor: 'pointer',\r\n  },\r\n  indicatorActive: {\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, DefaultTheme } from '@material-ui/styles';\r\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\n\r\ntype CarouselArrowProps = {\r\n  direction: 'forward' | 'backward';\r\n};\r\n\r\nexport const CarouselArrow: React.FC<React.ComponentProps<'div'> & CarouselArrowProps> = ({\r\n  direction,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ direction });\r\n\r\n  // Hide button outline by default, add it back if Tab is pressed\r\n  const [keyboardUser, setKeyboardUser] = useState(false);\r\n  useEffect(() => {\r\n    function handleKeyDown(e: KeyboardEvent) {\r\n      if (e.key === 'Tab') {\r\n        setKeyboardUser(true);\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  let className = classes.arrowWrapper;\r\n  if (!keyboardUser) className += ' ' + classes.noOutline;\r\n  return (\r\n    <div className={className} {...rest} role=\"button\" aria-label={direction}>\r\n      {direction === 'forward' ? <IoIosArrowForward /> : <IoIosArrowBack />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles<DefaultTheme, CarouselArrowProps>({\r\n  arrowWrapper: (props) => ({\r\n    height: '100%',\r\n    left: props.direction === 'backward' ? 0 : '',\r\n    right: props.direction === 'forward' ? 0 : '',\r\n    top: 0,\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: 'rgba(255, 255, 255, 0.6)',\r\n    fontSize: '4.5vw',\r\n    '&:hover': {\r\n      color: 'rgba(140, 140, 140, 0.9)',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    },\r\n    transition: 'all 0.4s ease',\r\n  }),\r\n  noOutline: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n});\r\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//--\r\nimport { CarouselImage } from './CarouselImage';\r\nimport { CarouselIndicator } from './CarouselIndicator';\r\nimport { CarouselArrow } from './CarouselArrow';\r\n\r\ntype dataType = { url: string }[];\r\n\r\nexport type CarouselProps = {\r\n  data: dataType;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  showDots: true,\r\n  showArrows: true,\r\n  preloadImages: true,\r\n};\r\n\r\nexport const Carousel = (props: CarouselProps) => {\r\n  const { data, showDots, showArrows, preloadImages } = props;\r\n  const dataWithOffset: dataType = [data[data.length - 1], ...data, data[0]];\r\n  const classes = useStyles();\r\n  const [pos, setPos] = useState(1);\r\n  const prevPosRef = useRef<number | null>(null);\r\n  const wrapperRef = useRef<HTMLDivElement>(null!);\r\n  const [width, setWidth] = useState(0);\r\n  const swipehandlers = useSwipeable({\r\n    onSwipedLeft: () => goForward(),\r\n    onSwipedRight: () => goBackward(),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n  const [imagesLoaded, setImagesLoaded] = useState(0);\r\n  const firstRender = useRef(true);\r\n  const [interactionEnabled, setInteractionEnabled] = useState(true);\r\n\r\n  // get previous position, to know where the last transition came from\r\n  useEffect(() => {\r\n    prevPosRef.current = pos;\r\n  }, [pos]);\r\n  const prevPos = prevPosRef.current;\r\n\r\n  // move control functions\r\n  const goForward = useCallback(() => {\r\n    if (!interactionEnabled) return;\r\n    firstRender.current = false;\r\n    setPos((p) => p + 1);\r\n    setInteractionEnabled(false);\r\n  }, [interactionEnabled]);\r\n\r\n  const goBackward = useCallback(() => {\r\n    if (!interactionEnabled) return;\r\n    firstRender.current = false;\r\n    setPos((p) => p - 1);\r\n    setInteractionEnabled(false);\r\n  }, [interactionEnabled]);\r\n\r\n  const goTo = (target: number) => {\r\n    if (!interactionEnabled) return;\r\n    firstRender.current = false;\r\n    setPos(target);\r\n    setInteractionEnabled(false);\r\n  };\r\n\r\n  // preload images\r\n  useEffect(() => {\r\n    if (preloadImages) {\r\n      data.forEach((item) => {\r\n        const imgageToLoad = new Image();\r\n        imgageToLoad.src = item.url;\r\n        imgageToLoad.onload = () => {\r\n          setImagesLoaded((x) => x + 1);\r\n        };\r\n      });\r\n    } else {\r\n      setImagesLoaded(data.length);\r\n    }\r\n  }, [preloadImages, data]);\r\n\r\n  // arrow navigation\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'ArrowLeft') {\r\n        goBackward();\r\n      } else if (event.key === 'ArrowRight') {\r\n        goForward();\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [goBackward, goForward]);\r\n\r\n  // get initial width and update on resize\r\n  const getWidth = (el: HTMLDivElement) => {\r\n    if (el !== null) {\r\n      setWidth(el.getBoundingClientRect().width);\r\n    }\r\n  };\r\n\r\n  const captureWidthOnResize = useCallback(() => getWidth(wrapperRef.current), []);\r\n  const initialRefForWidth = useCallback((el) => getWidth(el), []);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', captureWidthOnResize);\r\n    return () => {\r\n      window.removeEventListener('resize', captureWidthOnResize);\r\n    };\r\n  }, [captureWidthOnResize]);\r\n\r\n  // handle 'instant jump' when wrapping around after transition finished, also re-enable controls\r\n  const handleTransitionEnd = () => {\r\n    if (pos === 0) setPos(data.length);\r\n    if (pos === data.length + 1) setPos(1);\r\n    setInteractionEnabled(true);\r\n  };\r\n\r\n  // when wrapping around and on the first load, slide instantly (without transition)\r\n  const shouldMoveWithoutTransition =\r\n    (pos === 1 && prevPos === data.length + 1) ||\r\n    (pos === data.length && prevPos === 0) ||\r\n    firstRender.current;\r\n\r\n  // active dot position needs to account for wrapping around\r\n  let indicatorPosition = pos - 1;\r\n  if (pos === 0) indicatorPosition = data.length - 1;\r\n  if (pos === data.length + 1) indicatorPosition = 0;\r\n\r\n  // loading spinner\r\n  if (imagesLoaded !== data.length) {\r\n    return (\r\n      <div className={classes.loaderDiv}>\r\n        <CircularProgress className={classes.loader} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...swipehandlers}>\r\n      <div className={classes.wrapper} ref={initialRefForWidth}>\r\n        <div\r\n          data-testid=\"carousel\"\r\n          ref={wrapperRef}\r\n          className={\r\n            shouldMoveWithoutTransition ? classes.carousel : `${classes.carousel} ${classes.withTransition}`\r\n          }\r\n          style={{ left: pos * width * -1 }}\r\n          onTransitionEnd={handleTransitionEnd}\r\n        >\r\n          {dataWithOffset.map((item, index) => (\r\n            <CarouselImage key={item.url + index} src={item.url} index={index} />\r\n          ))}\r\n        </div>\r\n        {showDots && <CarouselIndicator active={indicatorPosition} numItems={data.length} goTo={goTo} />}\r\n        {showArrows && (\r\n          <>\r\n            <CarouselArrow\r\n              direction=\"backward\"\r\n              onClick={() => goBackward()}\r\n              onKeyDown={(event) => {\r\n                if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') goBackward();\r\n              }}\r\n              tabIndex={0}\r\n            />\r\n            <CarouselArrow\r\n              direction=\"forward\"\r\n              onClick={() => goForward()}\r\n              onKeyDown={(event) => {\r\n                if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') goForward();\r\n              }}\r\n              tabIndex={0}\r\n            />\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  loaderDiv: {\r\n    textAlign: 'center',\r\n  },\r\n  loader: {\r\n    color: '#dedede',\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  carousel: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  withTransition: {\r\n    transition: 'all 1s ease',\r\n  },\r\n});\r\n\r\nCarousel.defaultProps = defaultProps;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n//--\r\nimport { Carousel } from './carousel/Carousel';\r\n\r\nconst imageList = [\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n];\r\n\r\nexport const App: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.carouselContainer}>\r\n      <Carousel data={imageList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  carouselContainer: {\r\n    width: '70%',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}