{"version":3,"sources":["carousel/CarouselImage.tsx","carousel/CarouselIndicator.tsx","carousel/CarouselArrow.tsx","carousel/Carousel.tsx","hooks/useWidth.ts","App.tsx","index.tsx"],"names":["CarouselImage","src","index","classes","useStyles","className","imageWrapper","alt","image","makeStyles","flex","width","height","CarouselIndicator","active","numItems","dispatch","indicatorWrapper","Array","from","map","item","indicator","indicatorActive","onClick","type","JUMP","payload","key","role","aria-label","bottom","position","display","justifyContent","margin","backgroundColor","borderRadius","transition","cursor","CarouselArrow","direction","rest","useState","keyboardUser","setKeyboardUser","useEffect","handleKeyDown","e","document","removeEventListener","addEventListener","arrowWrapper","noOutline","props","left","right","top","alignItems","color","fontSize","outline","initialState","pos","indicatorPos","shouldMoveWithoutTransition","interactionEnabled","Carousel","data","showDots","showArrows","preloadImages","dataWithOffset","length","useReducer","state","action","setWidth","ref","useRef","getWidth","el","getBoundingClientRect","widthRef","useCallback","node","current","useLayoutEffect","captureWidthOnResize","window","useWidth","swipehandlers","useSwipeable","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","trackMouse","imagesLoaded","setImagesLoaded","forEach","imgageToLoad","Image","url","onload","x","event","preventDefault","loaderDiv","CircularProgress","loader","wrapper","data-testid","carousel","withTransition","style","onTransitionEnd","onKeyDown","tabIndex","textAlign","overflow","flexDirection","defaultProps","imageList","Math","random","App","carouselContainer","transform","ReactDOM","render","StrictMode","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.d3642666.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\ntype CarouselImageProps = {\r\n  src: string;\r\n  index: number;\r\n};\r\n\r\nexport const CarouselImage: React.FC<CarouselImageProps> = ({ src, index }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.imageWrapper}>\r\n      <img src={src} alt={'Image #' + index} className={classes.image} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  imageWrapper: {\r\n    flex: '1 0 100%',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n//--\r\nimport { Action, JUMP } from './Carousel';\r\n\r\ntype CarouselIndicatorProps = {\r\n  active: number;\r\n  numItems: number;\r\n  dispatch: React.Dispatch<Action>;\r\n};\r\n\r\nexport const CarouselIndicator: React.FC<CarouselIndicatorProps> = ({ active, numItems, dispatch }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.indicatorWrapper}>\r\n      {Array.from(Array(numItems)).map((item, index) => {\r\n        let className = classes.indicator;\r\n        if (active === index) className += ' ' + classes.indicatorActive;\r\n        return (\r\n          <div\r\n            className={className}\r\n            onClick={() => dispatch({ type: JUMP, payload: index + 1 })}\r\n            key={index}\r\n            role=\"button\"\r\n            aria-label={'image-' + index}\r\n          ></div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  indicatorWrapper: {\r\n    width: '100%',\r\n    bottom: 30,\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n  },\r\n  indicator: {\r\n    height: 8,\r\n    width: 8,\r\n    margin: '0 4px',\r\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\r\n    borderRadius: '50%',\r\n    transition: 'all 0.7s ease',\r\n    cursor: 'pointer',\r\n  },\r\n  indicatorActive: {\r\n    backgroundColor: 'white',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, DefaultTheme } from '@material-ui/styles';\r\nimport { IoIosArrowBack, IoIosArrowForward } from 'react-icons/io';\r\n\r\ntype CarouselArrowProps = {\r\n  direction: 'forward' | 'backward';\r\n};\r\n\r\nexport const CarouselArrow: React.FC<React.ComponentProps<'div'> & CarouselArrowProps> = ({\r\n  direction,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles({ direction });\r\n\r\n  // Hide button outline by default, add it back if Tab is pressed\r\n  const [keyboardUser, setKeyboardUser] = useState(false);\r\n  useEffect(() => {\r\n    function handleKeyDown(e: KeyboardEvent) {\r\n      if (e.key === 'Tab') {\r\n        setKeyboardUser(true);\r\n        document.removeEventListener('keydown', handleKeyDown);\r\n      }\r\n    }\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  let className = classes.arrowWrapper;\r\n  if (!keyboardUser) className += ' ' + classes.noOutline;\r\n  return (\r\n    <div className={className} {...rest} role=\"button\" aria-label={direction}>\r\n      {direction === 'forward' ? <IoIosArrowForward /> : <IoIosArrowBack />}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles<DefaultTheme, CarouselArrowProps>({\r\n  arrowWrapper: (props) => ({\r\n    height: '100%',\r\n    left: props.direction === 'backward' ? 0 : '',\r\n    right: props.direction === 'forward' ? 0 : '',\r\n    top: 0,\r\n    position: 'absolute',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    color: 'rgba(255, 255, 255, 0.6)',\r\n    fontSize: '4.5vw',\r\n    '&:hover': {\r\n      color: 'rgba(140, 140, 140, 0.9)',\r\n      backgroundColor: 'rgba(255, 255, 255, 0.5)',\r\n    },\r\n    transition: 'all 0.4s ease',\r\n  }),\r\n  noOutline: {\r\n    '&:focus': {\r\n      outline: 'none',\r\n    },\r\n  },\r\n});\r\n","import React, { useState, useEffect, useReducer } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useSwipeable } from 'react-swipeable';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n//--\r\nimport { CarouselImage } from './CarouselImage';\r\nimport { CarouselIndicator } from './CarouselIndicator';\r\nimport { CarouselArrow } from './CarouselArrow';\r\nimport { useWidth } from '../hooks/useWidth';\r\n\r\ntype dataType = { url: string }[];\r\n\r\nexport type CarouselProps = {\r\n  data: dataType;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n  showDots: true,\r\n  showArrows: true,\r\n  preloadImages: true,\r\n};\r\n\r\nexport const FORWARD = 'FORWARD';\r\nexport const BACKWARD = 'BACKWARD';\r\nexport const JUMP = 'JUMP';\r\nexport const TRANSITION_END = 'TRANSITION_END';\r\n\r\ntype forward = { type: typeof FORWARD };\r\ntype backward = { type: typeof BACKWARD };\r\ntype jump = { type: typeof JUMP; payload: number };\r\ntype transitionEnd = { type: typeof TRANSITION_END };\r\n\r\nexport type Action = forward | backward | jump | transitionEnd;\r\n\r\ntype CarouselState = {\r\n  pos: number;\r\n  indicatorPos: number;\r\n  shouldMoveWithoutTransition: boolean;\r\n  interactionEnabled: boolean;\r\n};\r\n\r\nconst initialState = {\r\n  pos: 1,\r\n  indicatorPos: 0,\r\n  shouldMoveWithoutTransition: true,\r\n  interactionEnabled: true,\r\n};\r\n\r\nexport const Carousel = (props: CarouselProps) => {\r\n  const { data, showDots, showArrows, preloadImages } = props;\r\n  const dataWithOffset: dataType = [data[data.length - 1], ...data, data[0]];\r\n  const classes = useStyles();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const [width, widthRef] = useWidth();\r\n  const swipehandlers = useSwipeable({\r\n    onSwipedLeft: () => dispatch({ type: FORWARD }),\r\n    onSwipedRight: () => dispatch({ type: BACKWARD }),\r\n    preventDefaultTouchmoveEvent: true,\r\n    trackMouse: true,\r\n  });\r\n  const [imagesLoaded, setImagesLoaded] = useState(0);\r\n\r\n  function reducer(state: CarouselState, action: Action): CarouselState {\r\n    switch (action.type) {\r\n      case FORWARD:\r\n        if (!state.interactionEnabled) return state;\r\n        return {\r\n          ...state,\r\n          pos: state.pos + 1,\r\n          indicatorPos: state.pos === data.length ? 0 : state.pos,\r\n          interactionEnabled: false,\r\n          shouldMoveWithoutTransition: false,\r\n        };\r\n      case BACKWARD:\r\n        if (!state.interactionEnabled) return state;\r\n        return {\r\n          ...state,\r\n          pos: state.pos - 1,\r\n          indicatorPos: state.pos === 1 ? data.length - 1 : state.pos - 2,\r\n          interactionEnabled: false,\r\n          shouldMoveWithoutTransition: false,\r\n        };\r\n      case JUMP:\r\n        return {\r\n          ...state,\r\n          pos: action.payload,\r\n          indicatorPos: action.payload - 1,\r\n          interactionEnabled: false,\r\n          shouldMoveWithoutTransition: false,\r\n        };\r\n      case TRANSITION_END:\r\n        let pos = state.pos;\r\n        let shouldMoveWithoutTransition = false;\r\n        if (state.pos === 0) {\r\n          pos = data.length;\r\n          shouldMoveWithoutTransition = true;\r\n        }\r\n        if (state.pos === data.length + 1) {\r\n          pos = 1;\r\n          shouldMoveWithoutTransition = true;\r\n        }\r\n        return {\r\n          ...state,\r\n          pos,\r\n          interactionEnabled: true,\r\n          shouldMoveWithoutTransition,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  // preload images\r\n  useEffect(() => {\r\n    if (preloadImages) {\r\n      data.forEach((item) => {\r\n        const imgageToLoad = new Image();\r\n        imgageToLoad.src = item.url;\r\n        imgageToLoad.onload = () => {\r\n          setImagesLoaded((x) => x + 1);\r\n        };\r\n      });\r\n    } else {\r\n      setImagesLoaded(data.length);\r\n    }\r\n  }, [preloadImages, data]);\r\n\r\n  // arrow navigation\r\n  useEffect(() => {\r\n    const handleKeyDown = (event: KeyboardEvent) => {\r\n      if (event.key === 'ArrowLeft') {\r\n        event.preventDefault();\r\n        dispatch({ type: BACKWARD });\r\n      } else if (event.key === 'ArrowRight') {\r\n        event.preventDefault();\r\n        dispatch({ type: FORWARD });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, [dispatch]);\r\n\r\n  // loading spinner\r\n  if (imagesLoaded !== data.length) {\r\n    return (\r\n      <div className={classes.loaderDiv}>\r\n        <CircularProgress className={classes.loader} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div {...swipehandlers} className={classes.wrapper}>\r\n      <div\r\n        data-testid=\"carousel\"\r\n        ref={widthRef}\r\n        className={\r\n          state.shouldMoveWithoutTransition\r\n            ? classes.carousel\r\n            : `${classes.carousel} ${classes.withTransition}`\r\n        }\r\n        style={{ left: state.pos * width * -1 }}\r\n        onTransitionEnd={() => dispatch({ type: TRANSITION_END })}\r\n      >\r\n        {dataWithOffset.map((item, index) => (\r\n          <CarouselImage key={item.url + index} src={item.url} index={index} />\r\n        ))}\r\n      </div>\r\n      {showDots && (\r\n        <CarouselIndicator active={state.indicatorPos} numItems={data.length} dispatch={dispatch} />\r\n      )}\r\n      {showArrows && (\r\n        <>\r\n          <CarouselArrow\r\n            direction=\"backward\"\r\n            onClick={() => dispatch({ type: BACKWARD })}\r\n            onKeyDown={(event) => {\r\n              if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') {\r\n                event.preventDefault();\r\n                dispatch({ type: BACKWARD });\r\n              }\r\n            }}\r\n            tabIndex={0}\r\n          />\r\n          <CarouselArrow\r\n            direction=\"forward\"\r\n            onClick={() => dispatch({ type: FORWARD })}\r\n            onKeyDown={(event) => {\r\n              if (event.key === ' ' || event.key === 'Enter' || event.key === 'Spacebar') {\r\n                event.preventDefault();\r\n                dispatch({ type: FORWARD });\r\n              }\r\n            }}\r\n            tabIndex={0}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  loaderDiv: {\r\n    textAlign: 'center',\r\n  },\r\n  loader: {\r\n    color: '#dedede',\r\n  },\r\n  wrapper: {\r\n    position: 'relative',\r\n    overflow: 'hidden',\r\n  },\r\n  carousel: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  withTransition: {\r\n    transition: 'all 1s ease',\r\n  },\r\n});\r\n\r\nCarousel.defaultProps = defaultProps;\r\n","import { useState, useLayoutEffect, useRef, useCallback } from 'react';\r\n\r\nexport const useWidth = () => {\r\n  const [width, setWidth] = useState<number>(0);\r\n  const ref = useRef<HTMLDivElement>(null!);\r\n\r\n  const getWidth = (el: HTMLDivElement) => {\r\n    if (el !== null) {\r\n      setWidth(el.getBoundingClientRect().width);\r\n    }\r\n  };\r\n\r\n  const widthRef = useCallback((node) => {\r\n    if (node) {\r\n      getWidth(node);\r\n    }\r\n\r\n    ref.current = node;\r\n  }, []);\r\n\r\n  useLayoutEffect(() => {\r\n    const captureWidthOnResize = () => getWidth(ref.current);\r\n\r\n    window.addEventListener('resize', captureWidthOnResize);\r\n    return () => {\r\n      window.removeEventListener('resize', captureWidthOnResize);\r\n    };\r\n  }, [ref]);\r\n\r\n  return [width, widthRef] as const;\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\n//--\r\nimport { Carousel } from './carousel/Carousel';\r\n\r\nconst imageList = [\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n  { url: 'https://picsum.photos/2000/1200?random=' + Math.random() * 1000 },\r\n];\r\n\r\nexport const App: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.carouselContainer}>\r\n      <Carousel data={imageList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  carouselContainer: {\r\n    width: '70%',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n  },\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}